[tool.poetry]
name = "dj-data-generator"
version = "0.1.0"
description = "A package for generate fake data"
authors = ["ARYAN-NIKNEZHAD <aryan513966@gmail.com>", "MEHRSHAD-MIRSHEKARY <mehrshad_mirshekary@email.com>" ]
keywords = [ "django_data_generator", "data_generator", "fake_data" ]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.9"
django = [
  { version = ">=4.2,<5.0", python = ">=3.9,<3.10" },
  { version = ">=4.2,<5.3", python = ">=3.10" },      # Django 4.2 and 5.x for Python 3.10+
]

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.2"
pytest-django = "^4.8.0"
pytest-cov = "^5.0.0"
pylint = "^3.2.6"
pylint-django = "^2.5.5"
mypy = "^1.11.1"
isort = "^5.13.2"
black = "^24.4.2"
commitizen = "^3.28.0"
pre-commit = "^3.5.0"
bandit = { extras = [ "toml" ], version = "^1.7.9" }
tox = "^4.16.0"
django-stubs = "^5.0.4"
sphinx = "^6.2.1"
sphinx-rtd-theme = "^2.0.0"
docformatter = "^1.7.5"
codecov = "^2.1.13"
python-semantic-release = "^9.8.8"


[tool.commitizen]
name = "cz_conventional_commits"
version = "1.2.0"
tag_format = "v$version"

[tool.commitizen.settings]
increment_types = [ "feat", "fix" ]

[tool.semantic_release]
assets = [  ]
build_command_env = [  ]
commit_message = "{version}\n\nAutomatically generated by python-semantic-release"
commit_parser = "emoji"
logging_use_named_masks = false
major_on_zero = true
allow_zero_version = true
no_git_verify = false
tag_format = "v{version}"
#version_variables = [ "django_notification/version.py:__version__" ]

[tool.semantic_release.branches.main]
match = "(main|master)"
prerelease_token = "rc"
prerelease = false

[tool.semantic_release.changelog]
template_dir = "templates"
changelog_file = "CHANGELOG.md"
exclude_commit_patterns = [  ]

[tool.semantic_release.changelog.environment]
block_start_string = "{%"
block_end_string = "%}"
variable_start_string = "{{"
variable_end_string = "}}"
comment_start_string = "{#"
comment_end_string = "#}"
trim_blocks = false
lstrip_blocks = false
newline_sequence = "\n"
keep_trailing_newline = false
extensions = [  ]
autoescape = true

[tool.semantic_release.commit_author]
env = "GIT_COMMIT_AUTHOR"
default = "semantic-release <semantic-release>"

[tool.semantic_release.commit_parser_options]
allowed_tags = [ "build", "chore", "ci", "docs", "feat", "fix", "perf", "style", "refactor", "test" ]
minor_tags = [ "feat" ]
patch_tags = [ "fix", "perf" ]
default_bump_level = 0
parse_emoji = true

[tool.semantic_release.remote]
name = "origin"
token = ""
type = "github"
ignore_token_for_push = false
insecure = false

[tool.semantic_release.publish]
dist_glob_patterns = [ "dist/*" ]
upload_to_vcs_release = true



[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
